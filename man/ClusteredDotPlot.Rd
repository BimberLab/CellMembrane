% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analysis.R
\name{ClusteredDotPlot}
\alias{ClusteredDotPlot}
\title{ClusteredDotPlot}
\usage{
ClusteredDotPlot(
  seuratObj,
  features,
  groupFields = "ClusterNames_0.2",
  assay = "RNA",
  ggplotify = TRUE,
  scaling = "column",
  layer = "data",
  forceRescaling = FALSE,
  km = NULL,
  columnTitles = NULL
)
}
\arguments{
\item{seuratObj}{The Seurat object that holds the data.}

\item{features}{The features to plot.}

\item{groupFields}{The metadata column that is used for grouping.}

\item{assay}{The assay to plot.}

\item{ggplotify}{A boolean that determines if the ComplexHeatmap object should be converted to a ggplot object.}

\item{scaling}{The scaling method for the heatmap. Options are "row", "column", or none.}

\item{layer}{The layer of the Seurat object that holds the relevant expression data.}

\item{forceRescaling}{A boolean that determines if the Seurat object should be rescaled to include entries in the features vector if any are missing from the scale.data layer. This might be costly to perform locally.}

\item{km}{The number of k-means clusters to split the columns into. This is passed directly to ComplexHeatmap. Must be an integer or NULL.}

\item{columnTitles}{The column title(s) for the heatmap. Acceptable values are 1 (for a single title), NULL (for no title), or length(columnTitles) == km. If km is an integer, these will be used to label the k-means column-wise clusters. Please note that alignment of the column titles and the k means clustering will likely need manual adjustment after an initial assessment of the order of the kmeans clusters.}
}
\description{
A function that generates a clustered dot plot with a heatmap of scaled expression.
}
\examples{
\dontrun{
#set the seurat Idents for FindAllMarkers
Seurat::Idents(seuratObj) <- "ClusterNames_0.2"

markers <- Seurat::FindAllMarkers(seuratObj)

#filter markers to display the largest cluster identity markers according to average log fold change and differences in pct expression.
strong_markers <- markers[abs(markers$avg_log2FC) > 3 & abs(markers$pct.1 - markers$pct.2) > 0.25, "gene"]

dotPlot <- ClusteredDotPlot(seuratObj, features = strong_markers, groupFields = "ClusterNames_0.2", scaling = 'column', ggplotify = TRUE)
print(dotPlot)

}
}
